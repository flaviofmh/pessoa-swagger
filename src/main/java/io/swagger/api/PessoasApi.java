/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.PessoaRequest;
import io.swagger.model.PessoaResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-03-24T02:48:12.709Z")

@Api(value = "pessoas", description = "the pessoas API")
@RequestMapping(value = "/pessoa-api/v1")
public interface PessoasApi {

    @ApiOperation(value = "Lista pessoas", nickname = "listarPessoas", notes = "Lista todoas as pessoas cadastradas no sistema", response = PessoaResponse.class, tags={ "Pessoa", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Listagem Retornada com sucesso", response = PessoaResponse.class) })
    @RequestMapping(value = "/pessoas",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<PessoaResponse> listarPessoas(@NotNull @ApiParam(value = "Numero da pagina da listagem", required = true) @Valid @RequestParam(value = "page", required = true) Long page,@NotNull @ApiParam(value = "Quantidade de dados a ser exibida na pagina", required = true) @Valid @RequestParam(value = "count", required = true) Long count,@ApiParam(value = "") @Valid @RequestParam(value = "nome", required = false) String nome,@ApiParam(value = "") @Valid @RequestParam(value = "cpf", required = false) String cpf,@ApiParam(value = "") @Valid @RequestParam(value = "email", required = false) String email) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"foto\" : \"UHhhFFGGIAOiww77GBBKghyjgdftiuOiuionjhbhjvjhf65345jvFYTFVUYGUYIFTUYUYGbhjfgrtds34554\",  \"cpf\" : \"123.456.789-00\",  \"nome\" : \"Jonas Santos\",  \"dataNascimento\" : \"\",  \"email\" : \"email@email.com\"}", PessoaResponse.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PessoasApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Cadastra pessoa", nickname = "salvarPessoa", notes = "Cadastra uma nova pessoa", response = PessoaRequest.class, tags={ "Pessoa", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Cadastro efetuado com sucesso", response = PessoaRequest.class),
        @ApiResponse(code = 400, message = "Requisição invalida"),
        @ApiResponse(code = 500, message = "Erro interno no servidor") })
    @RequestMapping(value = "/pessoas",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<PessoaRequest> salvarPessoa(@ApiParam(value = ""  )  @Valid @RequestBody PessoaRequest pessoa) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"foto\" : \"UHhhFFGGIAOiww77GBBKghyjgdftiuOiuionjhbhjvjhf65345jvFYTFVUYGUYIFTUYUYGbhjfgrtds34554\",  \"cpf\" : \"123.456.789-00\",  \"nome\" : \"Jonas Santos\",  \"id\" : 123,  \"dataNascimento\" : \"\",  \"email\" : \"email@email.com\"}", PessoaRequest.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default PessoasApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
